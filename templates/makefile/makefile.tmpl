{{define "makefile"}}
# Project variables
BINARY_NAME := myapp
PKG := ./...

# Go commands
GO := go
GOFMT := gofmt

.PHONY: all build run test fmt lint clean tidy tools ci swagger run-test

# Default target
all: build

# Build the binary
build:
	$(GO) build -o $(BINARY_NAME)

# Run the application
run: build
	./$(BINARY_NAME)

# Run the API
run-api:
	$(GO) run cmd/api/main.go

# Generate Swagger documentation
swagger:
	swag init -o ./docs -d ./cmd/api
	swag init -g ./cmd/meetspace/main.go -o ./docs

# Run tests with coverage
run-test:
	GIN_MODE=test $(GO) test -v -cover -coverprofile=coverage.out $(PKG)

# Test the code
test:
	$(GO) test -v $(PKG)

# Format the code
fmt:
	$(GOFMT) -s -w .

# Lint the code
lint:
	golangci-lint run

# Clean up build files
clean:
	rm -f $(BINARY_NAME)

# Tidy dependencies
tidy:
	$(GO) mod tidy

# Install necessary Go tools
tools:
	$(GO) install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

# Run all the tests and check formatting
ci: fmt test lint
{{end}}