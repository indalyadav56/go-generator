{{define "handler"}}
package handlers

import (
	"github.com/gin-gonic/gin"
	"{{.ServiceName}}/internal/{{.AppName}}/services"
)

type {{.IAppName}}Handler interface {
	Create(c *gin.Context)
	Get(c *gin.Context)
	Update(c *gin.Context)
	Delete(c *gin.Context)
}

type {{.AppName}}Handler struct {
	service services.{{.IAppName}}Service
}

func New{{.IAppName}}Handler(service services.{{.IAppName}}Service) {{.IAppName}}Handler {
	return &{{.AppName}}Handler{
		service: service,
	}
}

func (h *{{.AppName}}Handler) Create(c *gin.Context) {
	// Implementation for Create
}

func (h *{{.AppName}}Handler) Get(c *gin.Context) {
	// Implementation for Get
}

func (h *{{.AppName}}Handler) Update(c *gin.Context) {
	// Implementation for Update
}

func (h *{{.AppName}}Handler) Delete(c *gin.Context) {
	// Implementation for Delete
}
{{end}}
