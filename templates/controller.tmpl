{{define "controller"}}

package controllers

import (
	"github.com/gofiber/fiber/v2"
	"{{.ServiceName}}/internal/{{.AppName}}/services"
)

type {{.IAppName}}Controller interface {
	Create(ctx *fiber.Ctx) error
	Get(ctx *fiber.Ctx) error
	Update(ctx *fiber.Ctx) error
	Delete(ctx *fiber.Ctx) error
}

type {{.AppName}}Controller struct {
	{{.AppName}}Srv services.{{.IAppName}}Service
}

func New{{.IAppName}}Controller(s services.{{.IAppName}}Service) *{{.AppName}}Controller {
	return &{{.AppName}}Controller{
	{{.AppName}}Srv: s,
}
}

// Login godoc
// @Summary		login-user
// @Description	Login user
// @Tags			Auth
// @Produce		json
// @Router			/v1/{{.AppName}}s [post]
// @Success		200	"Login user successfully"
// @Failure		400	"Bad request"
// @Failure		500	"Internal server error"
func (c *{{.AppName}}Controller) Create(ctx *fiber.Ctx) error {
	// c.service.Create()
	return ctx.JSON(fiber.Map{"message": "Created {{.ServiceName}}"})
}

// Login godoc
// @Summary		login-user
// @Description	Login user
// @Tags			Auth
// @Produce		json
// @Router			/v1/{{.AppName}}s [get]
// @Success		200	"Login user successfully"
// @Failure		400	"Bad request"
// @Failure		500	"Internal server error"
func (c *{{.AppName}}Controller) Get(ctx *fiber.Ctx) error {
	return ctx.JSON(fiber.Map{"message": "Fetched {{.ServiceName}}"})
}

// Login godoc
// @Summary		login-user
// @Description	Login user
// @Tags			Auth
// @Produce		json
// @Router			/v1/{{.AppName}}s [patch]
// @Success		200	"Login user successfully"
// @Failure		400	"Bad request"
// @Failure		500	"Internal server error"
func (c *{{.AppName}}Controller) Update(ctx *fiber.Ctx) error {
	return ctx.JSON(fiber.Map{"message": "Updated {{.ServiceName}}"})
}

// Login godoc
// @Summary		login-user
// @Description	Login user
// @Tags			Auth
// @Produce		json
// @Router			/v1/{{.AppName}}s [delete]
// @Success		200	"Login user successfully"
// @Failure		400	"Bad request"
// @Failure		500	"Internal server error"
func (c *{{.AppName}}Controller) Delete(ctx *fiber.Ctx) error {
	return ctx.JSON(fiber.Map{"message": "Deleted {{.ServiceName}}"})
}

{{end}}