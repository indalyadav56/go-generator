{{define "auth_controller"}}

package controllers

import (
	"github.com/gofiber/fiber/v2"
	"{{.ServiceName}}/internal/{{.AppName}}/services"
)

type AuthController interface {
	Login(c *fiber.Ctx) error
	Register(c *fiber.Ctx) error
	Logout(c *fiber.Ctx) error
}

type authController struct {
	authService services.{{.IAppName}}Service
}

func NewAuthController(srv services.{{.IAppName}}Service) *authController {
	return &authController{
		authService: srv,
	}
}

// Register godoc
// @Summary Register a new user
// @Description Register a new user with the provided details
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/register [post]
func (tc *authController) Register(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

// Login godoc
// @Summary Login a user
// @Description Authenticate a user and return a JWT token
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/login [post]
func (tc *authController) Login(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

// RefreshToken godoc
// @Summary Refresh the JWT token
// @Description Refresh the JWT token using a valid refresh token
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/refresh [post]
func (tc *authController) RefreshToken(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

// Logout godoc
// @Summary Logout a user
// @Description Invalidate the refresh token to log the user out
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/logout [post]
func (tc *authController) Logout(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

// GetCurrentUser godoc
// @Summary Get the current authenticated user
// @Description Return details of the currently authenticated user
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/me [get]
func (tc *authController) GetCurrentUser(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

// RequestPasswordReset godoc
// @Summary Request password reset
// @Description Send a password reset email to the user
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/password-reset/request [post]
func (tc *authController) RequestPasswordReset(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

// ResetPassword godoc
// @Summary Reset password
// @Description Reset the user's password using a valid reset token
// @Tags Auth
// @Accept  json
// @Produce  json
// @Router /auth/password-reset/confirm [post]
func (tc *authController) ResetPassword(c *fiber.Ctx) error {
	// Method implementation
	return nil
}

{{end}}